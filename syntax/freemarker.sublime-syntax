%YAML 1.2
---
name: HTML (FreeMarker)
file_extensions:
  - ftl
first_line_match: (?i)<(!DOCTYPE\s*)?html
scope: embedding.freemarker
contexts:
  main:
    - match: ""
      push: "scope:text.html.basic"
      with_prototype:
        # Comment
        - match: "\\[#--"
          push:
            - meta_scope: comment.block.freemarker
            - match: "--\\]"
              pop: true
        # Interpolation
        - match: "\\$(?={)"
          scope: storage.type.function.freemarker
          push:
            - meta_scope: meta.embedded.line.freemarker
            - meta_content_scope: source.freemarker.embedded.html
            - match: "}"
              scope: meta.tag.inline.begin.freemarker
              pop: true
            - match: "{"
              scope: meta.tag.inline.end.freemarker
            - include: keywords
            - include: syntax
            - include: string-double-quoted
            - include: string-single-quoted
        # Tag & Directive
        - match: "(\\[\\/?#)(\\w+)"
          captures:
            1: punctuation.definition.block.begin.freemarker
            2: keyword.control.other.freemarker
          push:
            - meta_scope: meta.embedded.block.freemarker
            - meta_content_scope: source.freemarker.embedded.html
            - match: "\\/?\\]"
              scope: punctuation.definition.block.end.freemarker
              pop: true            
            - include: keywords
            - include: syntax
            - include: string-double-quoted
            - include: string-single-quoted
        # Tag & User-defined Directive
        - match: "(\\[\\/?@)(\\w+)"
          captures:
            1: punctuation.definition.tag.begin.freemarker
            2: keyword.control.other.freemarker
          push:
            - meta_scope: meta.embedded.line.freemarker
            - meta_content_scope: source.freemarker.embedded.html
            - match: "\\/?\\]"
              scope: punctuation.definition.tag.end.freemarker
              pop: true
            - match: "\\w+(?=\\=)"
              scope: variable.parameter.freemarker
            - include: keywords
            - include: syntax
            - include: string-double-quoted
            - include: string-single-quoted

  keywords:
    - match: "\\."
      scope: keyword.operator.accessor.freemarker
    - match: "!|\\?|\\?\\?|&&|\\|\\|"
      scope: keyword.operator.logical.freemarker
    - match: "==|!=|>|<|>=|<="
      scope: keyword.operator.comparison.freemarker
    - match: "(?:\\s)lt|lte|gt|gte(?:\\s)"
      scope: keyword.operator.comparison.freemarker
    - match: "=|\\+=|\\-=|\\*=|\\/=|%=|\\+\\+|--"
      scope: keyword.operator.assigment.freemarker
    - match: "[\\+\\-\\*\\/\\%]"
      scope: keyword.operator.arithmetic.freemarker
    - match: "(?:\\s)as(?:\\s)"
      scope: keyword.operator.other.freemarker
    - match: "\\.\\."
      scope: keyword.operator.other.freemarker
  syntax:
    - match: "(?<=\\?)[\\w_]+"
      scope: entity.name.function.freemarker
    - match: "(?<=\\.)[\\w_]+(?=\\()"
      scope: support.function.freemarker
    - match: "(?:\\B[-+])?(\\b[0-9]+(\\.[0-9]*)?)"
      scope: constant.numeric.freemarker
    - match: "true|false"
      scope: constant.language.boolean.freemarker
    - match: "\\w"
      scope: variables.other.freemarker
    - match: "\\(|\\)"
      scope: mata.brace.round.freemarker
    - match: "\\[|\\]"
      scope: mata.brace.square.freemarker
  string-double-quoted:
    - match: '"'
      scope: punctuation.definition.string.begin.freemarker
      push:
        - meta_scope: string.quoted.double.freemarker
        - match: '"'
          scope: punctuation.definition.string.end.freemarker
          pop: true
  string-single-quoted:
    - match: "'"
      scope: punctuation.definition.string.begin.freemarker
      push:
        - meta_scope: string.quoted.single.freemarker
        - match: "'"
          scope: punctuation.definition.string.end.freemarker
          pop: true